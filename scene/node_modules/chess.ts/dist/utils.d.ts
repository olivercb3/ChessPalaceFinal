import { Color, FlagKey, Piece, PieceSymbol, Square, Validation } from "./types";
/**
 * Extracts the zero-based rank of an 0x88 square.
 * @public
 */
export declare function rank(i: number): number;
/**
 * Extracts the zero-based file of an 0x88 square.
 * @public
 */
export declare function file(i: number): number;
/**
 * Converts a 0x88 square to algebraic notation.
 * @public
 */
export declare function algebraic(i: number): string;
/**
 * Returns the opposite color.
 */
export declare function swapColor(c: Color): Color;
/**
 * Checks if a character is a numeric digit.
 */
export declare function isDigit(c: string): boolean;
/**
 * Returns the ASCII symbol for each piece.  White pieces are in uppercase,
 * black in lowercase.
 */
export declare function symbol({ type, color }: Piece): string;
export declare function isColor(color: string): color is Color;
export declare function isPieceSymbol(symbol: string): symbol is PieceSymbol;
export declare function isSquare(sq: string): sq is Square;
export declare function isFlagKey(key: string): key is FlagKey;
export declare function validateFen(fen: string): Validation;
export declare function strippedSan(move: string): string;
//# sourceMappingURL=utils.d.ts.map