import { Board, Color, Comments, GameHistory, HexMove, Piece, Move, State, PartialMove } from './types';
export declare function getDisambiguator(state: State, move: HexMove, sloppy: boolean): string;
export declare function getFen(state: State): string;
export declare function loadFen(fen: string): State | null;
export declare function getPgn(state: State, header: Record<string, string>, comments: Comments, history: GameHistory[], options?: {
    newline_char?: string;
    max_width?: number;
}): string;
export declare function loadPgn(pgn: string, options?: {
    newline_char?: string;
    sloppy?: boolean;
}): [State, Record<string, string>, Comments, GameHistory[]] | null;
export declare function getPiece(state: State, square?: string): Piece | null;
export declare function cloneMove(move: HexMove): HexMove;
export declare function clonePiece(piece: Piece): Piece;
export declare function putPiece(prevState: State, piece: {
    type?: string;
    color?: string;
}, square?: string): State | null;
export declare function removePiece(prevState: State, square?: string): State | null;
export declare function generateMoves(state: State, options?: {
    legal?: boolean;
    square?: string;
}): HexMove[];
export declare function moveToSan(state: State, move: HexMove, options?: {
    sloppy?: boolean;
    checkPromotion?: boolean;
}): string;
export declare function sanToMove(state: State, move: string, options?: {
    sloppy?: boolean;
    checkPromotion?: boolean;
}): HexMove | null;
export declare function makePretty(state: State, ugly_move: HexMove): Move;
export declare function isAttacked(state: State, color: string, square: number): boolean;
export declare function isKingAttacked(state: State, color: Color): boolean;
export declare function inCheck(state: State): boolean;
export declare function inCheckmate(state: State): boolean;
export declare function inStalemate(state: State): boolean;
export declare function insufficientMaterial(state: State): boolean;
export declare function makeMove(prevState: State, move: HexMove): State;
export declare function buildMove(state: State, from: number, to: number, flags: number, promotion?: string): HexMove;
export declare function ascii(board: Board, eol?: string): string;
export declare function getBoard(board: Board): (Piece | null)[][];
export declare function validateMove(state: State, move: string | PartialMove, options?: {
    sloppy?: boolean;
    checkPromotion?: boolean;
}): HexMove | null;
//# sourceMappingURL=state.d.ts.map